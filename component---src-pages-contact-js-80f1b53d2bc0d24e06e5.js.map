{"version":3,"sources":["webpack:///./node_modules/semantic-ui-react/dist/es/modules/Embed/Embed.js","webpack:///./src/pages/contact.js"],"names":["_Component","Embed","_getPrototypeOf2","_this","this","_len","arguments","length","args","Array","_key","call","apply","concat","e","onClick","props","active","state","trySetState","key","value","_this$props","_this$props$autoplay","autoplay","_this$props$brandedUI","brandedUI","_this$props$color","color","_this$props$hd","hd","id","source","url","encodeURIComponent","join","_this$props2","aspectRatio","className","icon","placeholder","classes","rest","getUnhandledProps","ElementType","getElementType","iconShorthand","undefined","createElement","handleClick","Icon","create","autoGenerateKey","src","renderEmbed","_this$props3","children","content","iframe","isNil","getSrc","defaultProps","allowFullScreen","frameBorder","height","scrolling","title","width","Contact","data","Divider","hidden","alt","style","gridArea","fluid","phone","childImageSharp","Container","text","Grid","stackable","columns","Row","Column","href"],"mappings":"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","file":"component---src-pages-contact-js-80f1b53d2bc0d24e06e5.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport cx from 'classnames';\nimport React from 'react';\nimport { AutoControlledComponent as Component, childrenUtils, createHTMLIframe, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\n * An embed displays content from other websites like YouTube videos or Google Maps.\n */\n\nvar Embed = /*#__PURE__*/function (_Component) {\n  _inherits(Embed, _Component);\n\n  function Embed() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Embed);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Embed)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var onClick = _this.props.onClick;\n      var active = _this.state.active;\n      if (onClick) onClick(e, _objectSpread({}, _this.props, {\n        active: true\n      }));\n      if (!active) _this.trySetState({\n        active: true\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Embed, [{\n    key: \"getSrc\",\n    value: function getSrc() {\n      var _this$props = this.props,\n          _this$props$autoplay = _this$props.autoplay,\n          autoplay = _this$props$autoplay === void 0 ? true : _this$props$autoplay,\n          _this$props$brandedUI = _this$props.brandedUI,\n          brandedUI = _this$props$brandedUI === void 0 ? false : _this$props$brandedUI,\n          _this$props$color = _this$props.color,\n          color = _this$props$color === void 0 ? '#444444' : _this$props$color,\n          _this$props$hd = _this$props.hd,\n          hd = _this$props$hd === void 0 ? true : _this$props$hd,\n          id = _this$props.id,\n          source = _this$props.source,\n          url = _this$props.url;\n\n      if (source === 'youtube') {\n        return [\"//www.youtube.com/embed/\".concat(id), '?autohide=true', \"&amp;autoplay=\".concat(autoplay), \"&amp;color=\".concat(encodeURIComponent(color)), \"&amp;hq=\".concat(hd), '&amp;jsapi=false', \"&amp;modestbranding=\".concat(brandedUI), \"&amp;rel=\".concat(brandedUI ? 0 : 1)].join('');\n      }\n\n      if (source === 'vimeo') {\n        return [\"//player.vimeo.com/video/\".concat(id), '?api=false', \"&amp;autoplay=\".concat(autoplay), '&amp;byline=false', \"&amp;color=\".concat(encodeURIComponent(color)), '&amp;portrait=false', '&amp;title=false'].join('');\n      }\n\n      return url;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          aspectRatio = _this$props2.aspectRatio,\n          className = _this$props2.className,\n          icon = _this$props2.icon,\n          placeholder = _this$props2.placeholder;\n      var active = this.state.active;\n      var classes = cx('ui', aspectRatio, useKeyOnly(active, 'active'), 'embed', className);\n      var rest = getUnhandledProps(Embed, this.props);\n      var ElementType = getElementType(Embed, this.props);\n      var iconShorthand = icon !== undefined ? icon : 'video play';\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        onClick: this.handleClick\n      }), Icon.create(iconShorthand, {\n        autoGenerateKey: false\n      }), placeholder && React.createElement(\"img\", {\n        className: \"placeholder\",\n        src: placeholder\n      }), this.renderEmbed());\n    }\n  }, {\n    key: \"renderEmbed\",\n    value: function renderEmbed() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          iframe = _this$props3.iframe,\n          source = _this$props3.source;\n      var active = this.state.active;\n      if (!active) return null;\n      if (!childrenUtils.isNil(children)) return React.createElement(\"div\", {\n        className: \"embed\"\n      }, children);\n      if (!childrenUtils.isNil(content)) return React.createElement(\"div\", {\n        className: \"embed\"\n      }, content);\n      return React.createElement(\"div\", {\n        className: \"embed\"\n      }, createHTMLIframe(childrenUtils.isNil(iframe) ? this.getSrc() : iframe, {\n        defaultProps: {\n          allowFullScreen: false,\n          frameBorder: 0,\n          height: '100%',\n          scrolling: 'no',\n          src: this.getSrc(),\n          title: \"Embedded content from \".concat(source, \".\"),\n          width: '100%'\n        },\n        autoGenerateKey: false\n      }));\n    }\n  }]);\n\n  return Embed;\n}(Component);\n\n_defineProperty(Embed, \"autoControlledProps\", ['active']);\n\n_defineProperty(Embed, \"handledProps\", [\"active\", \"as\", \"aspectRatio\", \"autoplay\", \"brandedUI\", \"children\", \"className\", \"color\", \"content\", \"defaultActive\", \"hd\", \"icon\", \"id\", \"iframe\", \"onClick\", \"placeholder\", \"source\", \"url\"]);\n\nexport { Embed as default };","import React from 'react'\nimport { Container, Divider, Embed, Grid } from 'semantic-ui-react'\nimport Layout from '../components/layout'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { GatsbyJumbotron } from '../components/MyStyledComponents'\n\nexport default function Contact () {\n  const data = useStaticQuery(graphql`\n    query {\n      phone: file(\n        relativePath: {\n          regex: \"/(images/resources/phone2.jpg)/\"\n        }\n      ) {\n        childImageSharp {\n          fluid(fit: CONTAIN) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    `\n  )\n\n  return (\n    <Layout>\n      <GatsbyJumbotron>\n        <Divider hidden />\n        <Img\n          alt='red phone'\n          style={{ gridArea: 'main' }}\n          fluid={data.phone.childImageSharp.fluid}\n        />\n      </GatsbyJumbotron>\n      <Divider hidden />\n\n      <Container text>\n        <h1>Contact</h1>\n        <Divider hidden />\n\n        <Grid stackable columns={2}>\n          <Grid.Row>\n            <Grid.Column>\n              <h4>Email</h4>\n              <a href='mailto:innerwisdompsychologist@gmail.com'>innerwisdompsychologist@gmail.com</a>\n              <h4>Phone</h4>\n              <a href='tel:+61401057778‬'>0401 057 778‬</a>\n\n            </Grid.Column>\n\n            <Grid.Column>\n              <Embed aspectRatio='4:3' active url='https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d26547.89872365605!2d151.06351637981095!3d-33.72221217000799!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x6b12a72389442869%3A0x5017d681632cd80!2sThornleigh+NSW+2120%2C+Australia!5e0!3m2!1sen!2sus!4v1566244045799!5m2!1sen!2sus' />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}